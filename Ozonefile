---
project: ozone-test
context:
    default: local
    list:
      - local
build_vars:
    NETWORK: '{{PROJECT}}'
    NS_K8S_CONTEXTS: 'dynamic-ns-k8s|static-ns-k8s'
    DOMAIN: '{{DOMAIN | default_if_none:"o3.local"}}'
    DOCKER_REGISTRY: '{{DOCKER_REGISTRY | default_if_none:"registry.local"}}'
    NAMESPACE: '{{NAMESPACE | default_if_none:"ozone-test"}}'
    SECRET_BASE64: '{{SECRET_BASE64}}'
    MICRO_A_DIR: ./micro-a
    MICRO_X_DIR: ./micro-x
    MICRO_A_SERVICE: microa
    HELM_CHART: helm
    HEALTH_CHECKER_DIR: ./health-checker
    HEALTH_CHECKER_SERVICE: healthchecker
    SCRIPT_DIR: ./script
    services:
      - microa
      - microb
      - microx
      - healthchecker

environments:
  - name: base_secret_file
    include:
      - name: env/from_k8s_secret_file
        type: builtin
        input_vars:
          SECRET_FILE: ./secret.yml

  - name: all-docker-tags-latest
    for: service:services
    with_vars:
      "{{service | upper}}_FULL_TAG": "{{DOCKER_REGISTRY}}/{{service}}:latest"

  - name: base_secret64
    include:
      - name: env/from_k8s_secret64
        type: builtin

  - name: local
    include:
      - name: base_secret_file
      - name: all-docker-tags-latest
    with_vars:
      NAMESPACE: "{{NAMESPACE}}"

  - name: helm-base
    with_vars:
      INSTALL_NAME: "{{SERVICE}}"
      FULL_TAG: "{{DOCKER_REGISTRY}}/{{SERVICE}}:latest"
      CHART_DIR: ./helm
      K8S_SERVICE: "{{SERVICE}}"
      DOMAIN: "{{DOMAIN}}"
      CONTAINER_PORT: "{{CONTAINER_PORT}}"
      SERVICE_PORT: 80

  - name: ns
    include:
      - name: env/git_directory_branch_hash
        type: builtin
        with_vars:
          DOMAIN: "{{DOMAIN}}"
          GIT_BRANCH: "{{GIT_BRANCH}}"

  - name: static-ns
    include:
      - name: env/git_directory_branch_static
        type: builtin
        with_vars:
          DOMAIN: "{{DOMAIN}}"
          GIT_BRANCH: "{{GIT_BRANCH}}"

  - name: static-ns-k8s
    include:
      - name: static-ns
      - name: base_secret64
      - name: env/git_submodule_commit_hash
        type: builtin

  - name: dynamic-ns-k8s
    include:
      - name: ns
      - name: base_secret64
      - name: env/git_submodule_commit_hash
        type: builtin

pre_utilities:
  - name: applyK8sSecret
    context_steps:
      - context: "local-k8s|{{NS_K8S_CONTEXTS}}"
        steps:
          - type: builtin
            name: bashScript
            with_vars:
              SCRIPT: script/applySecret.sh

  - name: create-namespace
    steps:
      - type: builtin
        name: bashScript
        with_vars:
          SCRIPT: script/createNamespace.sh

  - name: install-docker-registry
    steps:
      - type: builtin
        name: bashScript
        with_vars:
          SCRIPT: script_dev/install_local_docker_registry.sh

  - name: install-istio
    steps:
      - type: builtin
        name: bashScript
        with_vars:
          SCRIPT: script/install_istio.sh

  - name: install-infrastructure-dependencies
    depends_on:
      - name: create-namespace
      - name: install-istio
      - name: install-docker-registry
      - name: applyK8sSecret

builds:
  - name: build-generic-go
    steps:
      - type: builtin
        name: buildDockerImage
        with_vars:
          DOCKER_FULL_TAG: "{{{{SERVICE | upper}}_FULL_TAG}}"
          DOCKER_BUILD_DIR: "{{DIR}}"
      - type: builtin
        name: pushDockerImage
        with_vars:
            DOCKER_FULL_TAG: "{{{{SERVICE | upper}}_FULL_TAG}}"

  - name: b-micro-x
    cache: true
    service: "{{SERVICE}}"
    dir: "{{MICRO_X_DIR}}"
    depends_on:
      - name: build-generic-go
        with_vars:
          FULL_TAG: "{{{{SERVICE | upper}}_FULL_TAG}}"
          DOCKERFILE: "./{{MICRO_X_DIR}}/Dockerfile"

  - name: b-micro-a
    cache: true
    service: microa
    dir: "{{MICRO_A_DIR}}"
    depends_on:
      - name: build-generic-go
        with_vars:
          FULL_TAG: "{{{{SERVICE | upper}}_FULL_TAG}}"
          DOCKERFILE: "./{{MICRO_A_DIR}}/Dockerfile"

  - name: b-health-checker
    cache: true
    service: healthchecker
    dir: "{{HEALTH_CHECKER_DIR}}"
    depends_on:
      - name: build-generic-go
        with_vars:
          FULL_TAG: "{{{{SERVICE | upper}}_FULL_TAG}}"
          DOCKERFILE: "./{{HEALTH_CHECKER_DIR}}/Dockerfile"

  - name: b-micro-b
    cache: true
    service: microb
    dir: "{{MICRO_X_DIR}}"
    depends_on:
      - name: build-generic-go
        with_vars:
          FULL_TAG: "{{{{SERVICE | upper}}_FULL_TAG}}"
          DOCKERFILE: "./{{MICRO_X_DIR}}/Dockerfile"

  - name: build-all
    parallel: true
    depends_on:
      - name: b-micro-a
      - name: b-micro-b
      - name: b-health-checker

deploys:
  - name: d-micro-x
    context_envs:
      - context: "local-k8s|{{NS_K8S_CONTEXTS}}"
        with_env:
          - helm-base
      - context: "{{CONTEXT}}"
        with_env:
          - "{{CONTEXT}}"
    context_steps:
      - context: local
        steps:
          - type: builtin
            name: runDockerImage
            with_vars:
              NETWORK: "{{PROJECT}}"
      - context: "local-k8s|{{NS_K8S_CONTEXTS}}"
        steps:
          - type: builtin
            name: helm

  - name: d-health-checker
    service: "{{HEALTH_CHECKER_SERVICE}}"
    dir: "{{HEALTH_CHECKER_DIR}}"
    context_envs:
      - context: "{{CONTEXT}}"
        with_env:
          - "{{CONTEXT}}"
    depends_on:
      - name: d-micro-x
        with_vars:
          FULL_TAG: "{{DOCKER_REGISTRY}}/{{HEALTH_CHECKER_SERVICE}}:latest"
          VALUES_FILE: "values/health-checker-values.yaml"
          CONTAINER_PORT: "{{HEALTH_CHECKER_PORT}}"

  - name: d-micro-a
    dir: "{{MICRO_A_DIR}}"
    service: "{{MICRO_A_SERVICE}}"
    context_envs:
      - context: local|local-k8s
        with_env:
          - base_secret_file
      - context: "{{NS_K8S_CONTEXTS}}"
        with_env:
          - base_secret64
    depends_on:
      - name: d-micro-x
        with_vars:
          VALUES_FILE: "values/micro-a-values.yaml"
          CONTAINER_PORT: "{{MICRO_A_PORT}}"

  - name: d-micro-b
    service: microb
    dir: "{{MICRO_X_DIR}}"
    context_envs:
      - context: "{{CONTEXT}}"
        with_env:
          - "{{CONTEXT}}"
    depends_on:
      - name: d-micro-x
        with_vars:
          FULL_TAG: "{{DOCKER_REGISTRY}}/microb:latest"
          CONTAINER_PORT: "{{MICRO_B_PORT}}"
          VALUES_FILE: "values/micro-b-values.yaml"

  - name: deploy-all
    depends_on:
      - name: d-micro-a
      - name: d-micro-b
      - name: d-health-checker


  - name: all-test
    depends_on:
      - name: build-all
      - name: postman-health-check

tests:
  - name: test-all
    depends_on:
      - name: postman-health-check

  - name: postman-health-check
    context_envs:
      - context: local-k8s
        with_env:
          - local-k8s
      - context: dynamic-ns-k8s
        with_env:
          - ns
      - context: static-ns-k8s
        with_env:
          - static-ns
    context_steps:
      - context: "local-k8s|{{NS_K8S_CONTEXTS}}"
        steps:
          - type: builtin
            name: bashScript
            with_vars:
              SCRIPT: script/runPostmanTests.sh

pipelines:
  - name: install-build-deploy-all
    depends_on:
      - name: install-infrastructure-dependencies
      - name: build-all
      - name: deploy-all

  - name: build-deploy-all
    depends_on:
      - name: build-all
      - name: deploy-all



post_utilities:
  - name: delete-namespace
    context_envs:
      - context: local-k8s
        with_env:
          - local-k8s
      - context: dynamic-ns-k8s
        with_env:
          - ns
      - context: static-ns-k8s
        with_env:
          - static-ns
    context_steps:
      - context: "local-k8s|{{NS_K8S_CONTEXTS}}"
        steps:
          - type: builtin
            name: bashScript
            with_vars:
              SCRIPT: script/deleteNamespace.sh